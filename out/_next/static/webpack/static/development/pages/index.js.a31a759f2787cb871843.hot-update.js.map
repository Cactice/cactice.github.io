{"version":3,"file":"static/webpack/static/development/pages/index.js.a31a759f2787cb871843.hot-update.js","sources":["webpack:///./components/SpringCards.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated } from 'react-spring'\n\nconst calc = (x, y, size) => [\n  -(y - size.y-(size.height/2)) / 10, \n  (x-size.x-(size.width/2)) / 10,\n  1.1\n]\n\nconst calcOnClick = (x, y, size) => [0, 180, 1.6]\n  \n  \n\n\nconst transXYS = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\nconst transXYSBack = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y+180}deg) scale(${s})`\nconst transShadow = (hOffset, vOffset, blur, spread, r, g, b, a) => `\\\n${hOffset}px ${vOffset}px ${blur}px ${spread}px rgba(${r}, ${g}, ${b}, ${a})\\\n`\n \nexport default function SpringCards({title,content,key,imageUrl}) {\n  const offMouseShadowVals = [0, 30, 50, -10, 0, 0, 0, 0.1]\n  const onMouseShadowVals  = [0, 5, 30, 5, 0, 0, 0, 0.05]\n\n  const offMouseCardAngle = [0, 0, 1]\n\n  const [size, setSize] = useState({x:0, y:0})\n  const [cardAngle, setXYS] = useSpring(() => ({ xys: offMouseCardAngle, config: { mass: 5, tension: 350, friction: 40 } }))\n  const [shadow, setShadow] = useSpring(() => ({ vals:offMouseShadowVals , config: { mass: 5, tension: 350, friction: 40 } }))\n  const [flipped, setFlipped] = useState(false)\n  const [flippedCardWidth, setFlippedCardWidth] = useState(260)\n\n  let node = {}\n  let refCallback = element => {\n    if (element) {\n      node=element\n    }\n  }\n\n  useEffect(() => {\n    let width = window.innerWidth \n    let flippedCardWidth = width < 600 ? width/2 : 260\n    setFlippedCardWidth(flippedCardWidth)\n  })\n  useEffect(() => {\n    setSize(node.getBoundingClientRect())\n  })\n\n  return (\n    <div \n    ref={refCallback} \n    style={{ width: '18rem' }}\n    >\n      <animated.div\n        style= {{\n          height:'250px',\n        }}\n        onMouseMove={({ clientX: x, clientY: y }) => {\n          if(flipped == false){\n            setXYS({ xys: calc(x, y, size)})\n            setShadow({ vals:onMouseShadowVals })\n          }\n        }}\n        onMouseLeave={() => {\n            setFlipped(false)\n            setXYS({ xys: offMouseCardAngle })\n            setShadow({ vals:offMouseShadowVals })\n        }}\n        onClick = {({ clientX: x, clientY: y })=> {\n          if(flipped == false){\n            setFlipped(true)\n            setXYS({ xys: calcOnClick(x,y,size) })\n            setShadow({ vals:offMouseShadowVals })\n          }else{\n            setFlipped(false)\n            setXYS({ xys: calc(x, y, size)})\n            setShadow({ vals:onMouseShadowVals })\n          }\n        }}\n      >\n        <animated.div\n          className=\"card\"\n          style={{ \n            cursor: 'pointer',\n            transform: cardAngle.xys.interpolate(transXYS) ,\n            boxShadow: shadow.vals.interpolate(transShadow),\n            position: 'absolute',\n            height: 240,\n            width: '17rem',\n            borderRadius: '20px',\n            zIndex:2,\n            backfaceVisibility: 'hidden',\n          }}\n        >\n          <div\n            style={{ \n              position:'absolute',\n              top:0,left:0,right:0,bottom:0,\n              backgroundImage: `url(/static/${imageUrl})`,\n              backgroundPosition: 'center center',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: 'contain',\n              borderRadius: '20px',\n              zIndex:10\n            }}\n          />\n          <div\n            style={{ \n              position:'absolute',\n              borderRadius: '20px',\n              top:0,left:0,right:0,bottom:0,\n              backgroundImage: `url(/static/${imageUrl})`,\n              backgroundPosition: 'center center',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: 'cover',\n              filter: 'blur(1px)',\n              zIndex:1,\n            }}\n          />\n        </animated.div>\n        <animated.div\n          className=\"card\"\n          style={{ \n            transform: cardAngle.xys.interpolate(transXYSBack) ,\n            boxShadow: shadow.vals.interpolate(transShadow),\n              top:0,left:0,right:0,bottom:0,\n            margin:'auto',\n            position: 'absolute',\n            height: 250,\n            width: flippedCardWidth,\n            borderRadius: '20px',\n            backfaceVisibility: 'hidden',\n            zIndex:10,\n          }}\n        >\n\n          <div style={{margin:10}}>\n          <strong>{title}</strong>\n          <hr/>\n          <div>\n            <p>{content}</p>\n          </div>\n          </div>\n        </animated.div>\n\n      </animated.div>\n\n      <style jsx>{`\n\n      root {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        overflow: hidden;\n        background: #f0f0f0;\n      }\n\n      .card {\n        height: 200px;\n\n      }\n\n    `}</style>\n    </div>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AALA;AAMA;AAAA;AAAA;AANA;AAAA;AAAA;AACA;AADA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AACA;AADA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3FA;AAAA;AAAA;AAAA;AAoHA;;;;A","sourceRoot":""}